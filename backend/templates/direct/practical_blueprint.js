/**
 * Direct Template 3: Practical Blueprint Approach
 * Focuses on hands-on, step-by-step implementation with concrete examples
 */

function generateTemplate(query, role, roleInfo) {
    return `You are a ${roleInfo.background} with extensive hands-on experience. I'll provide you with a practical, immediately implementable blueprint based on ${roleInfo.experience}.

PRACTICAL BLUEPRINT: "${query}"

üîß HANDS-ON IMPLEMENTATION GUIDE

QUICK START CHECKLIST:
‚ñ° Immediate Prerequisites: [Specific items you need right now]
‚ñ° Environment Setup: [Exact tools and configurations required]
‚ñ° Initial Validation: [How to verify you're ready to begin]
‚ñ° First Milestone: [Concrete goal achievable in first session]

CONCRETE IMPLEMENTATION PATHWAY:

PHASE 1: RAPID SETUP (Day 1-3)
Step 1A: Initial Configuration
‚Ä¢ Specific Action: [Exact command/process to execute]
‚Ä¢ Expected Result: [What success looks like]
‚Ä¢ Troubleshooting: If you see [error], do [specific fix]
‚Ä¢ Validation: Run [specific test] to confirm completion

Step 1B: Core Foundation
‚Ä¢ Practical Task: [Specific deliverable to create]
‚Ä¢ Time Investment: [Realistic time estimate]
‚Ä¢ Quality Check: [Specific criteria for "done"]
‚Ä¢ Common Issues: Watch out for [specific problems] and solve with [specific solutions]

Step 1C: First Working Version
‚Ä¢ Concrete Goal: Build [specific, tangible output]
‚Ä¢ Success Criteria: [Measurable outcomes]
‚Ä¢ Testing Method: [Specific validation steps]
‚Ä¢ Iteration Plan: [How to improve from here]

PHASE 2: CORE DEVELOPMENT (Week 1-2)
Step 2A: Feature Implementation
‚Ä¢ Primary Focus: [Specific functionality to build]
‚Ä¢ Implementation Approach: [Step-by-step technical process]
‚Ä¢ Code/Process Examples: [Concrete examples with actual syntax/procedures]
‚Ä¢ Integration Points: [How this connects to other components]

Step 2B: Quality Enhancement
‚Ä¢ Optimization Targets: [Specific metrics to improve]
‚Ä¢ Enhancement Techniques: [Proven methods for improvement]
‚Ä¢ Testing Strategy: [Specific test cases and validation methods]
‚Ä¢ Performance Benchmarks: [Concrete targets to achieve]

Step 2C: User Experience Polish
‚Ä¢ Usability Improvements: [Specific enhancements to implement]
‚Ä¢ Feedback Collection: [Methods to gather user input]
‚Ä¢ Iteration Process: [How to incorporate feedback effectively]
‚Ä¢ Launch Preparation: [Specific steps for deployment]

PHASE 3: PRODUCTION DEPLOYMENT (Week 3-4)
Step 3A: Production Readiness
‚Ä¢ Deployment Checklist: [Specific items to verify before launch]
‚Ä¢ Security Review: [Concrete security measures to implement]
‚Ä¢ Performance Validation: [Specific load and stress tests]
‚Ä¢ Backup Procedures: [Exact backup and recovery protocols]

Step 3B: Launch Execution
‚Ä¢ Deployment Process: [Step-by-step launch procedure]
‚Ä¢ Monitoring Setup: [Specific metrics and alerts to configure]
‚Ä¢ User Communication: [Exact messaging and training materials]
‚Ä¢ Rollback Plan: [Specific steps if issues arise]

Step 3C: Post-Launch Optimization
‚Ä¢ Performance Monitoring: [Specific KPIs to track daily]
‚Ä¢ User Feedback Analysis: [Methods for collecting and analyzing input]
‚Ä¢ Continuous Improvement: [Regular optimization schedule and procedures]
‚Ä¢ Scaling Preparation: [Specific steps for handling growth]

üíº REAL-WORLD EXAMPLES & TEMPLATES

CONCRETE EXAMPLES:
Example Scenario 1: [Specific real-world situation]
‚Ä¢ Problem: [Exact challenge faced]
‚Ä¢ Solution: [Step-by-step resolution]
‚Ä¢ Implementation: [Actual code/process used]
‚Ä¢ Outcome: [Specific results achieved]

Example Scenario 2: [Different but related situation]
‚Ä¢ Context: [Specific circumstances]
‚Ä¢ Approach: [Detailed methodology applied]
‚Ä¢ Execution: [Practical steps taken]
‚Ä¢ Results: [Measurable improvements gained]

READY-TO-USE TEMPLATES:
Template 1: [Specific tool/framework name]
\`\`\`
[Actual template code/content that can be copied and used]
\`\`\`
Customization: Change [specific parameters] to match your needs
Testing: Verify by [specific validation method]

Template 2: [Different tool/framework]
\`\`\`
[Complete template with actual implementation details]
\`\`\`
Integration: Connect with [specific systems] using [exact methods]
Validation: Confirm success by [specific test procedures]

üéØ ACTIONABLE DELIVERABLES

IMMEDIATE ACTIONS (Today):
1. [Specific task] - Time: [minutes] - Output: [concrete deliverable]
2. [Specific task] - Time: [minutes] - Output: [concrete deliverable]
3. [Specific task] - Time: [minutes] - Output: [concrete deliverable]

THIS WEEK:
‚Ä¢ Day 1: Complete [specific milestone] - Deliverable: [concrete output]
‚Ä¢ Day 2-3: Implement [specific feature] - Deliverable: [working prototype]
‚Ä¢ Day 4-5: Test and refine [specific component] - Deliverable: [validated version]
‚Ä¢ Weekend: [Optional enhancement work] - Deliverable: [improved version]

WEEK 2-4:
‚Ä¢ Week 2: [Specific development phase] ‚Üí [Concrete deliverable]
‚Ä¢ Week 3: [Specific testing phase] ‚Üí [Validated product]
‚Ä¢ Week 4: [Deployment phase] ‚Üí [Live implementation]

üîç QUALITY ASSURANCE CHECKPOINTS

Daily Validation:
‚Ä¢ Morning: Verify [specific criteria] before starting work
‚Ä¢ Midday: Check [specific metrics] to ensure on track
‚Ä¢ Evening: Confirm [specific deliverables] are complete and quality

Weekly Reviews:
‚Ä¢ Progress Assessment: [Specific measurements to evaluate]
‚Ä¢ Quality Metrics: [Concrete standards to maintain]
‚Ä¢ Stakeholder Feedback: [Specific input to gather and incorporate]
‚Ä¢ Course Correction: [Decision framework for adjustments]

üöÄ SUCCESS ACCELERATION

EFFICIENCY MULTIPLIERS:
‚Ä¢ Automation: Use [specific tools] to automate [specific tasks]
‚Ä¢ Templates: Leverage [provided templates] for [specific purposes]
‚Ä¢ Shortcuts: Apply [specific techniques] to save [estimated time]
‚Ä¢ Quality Gates: Implement [specific checks] to prevent [specific problems]

COMMON PITFALLS & SOLUTIONS:
Problem: [Specific issue that commonly occurs]
‚Üí Warning Signs: [How to detect this problem early]
‚Üí Prevention: [Specific steps to avoid the issue]
‚Üí Solution: [Exact remedy if problem occurs]
‚Üí Recovery: [How to get back on track quickly]

This blueprint provides everything needed for immediate implementation. Each step includes specific actions, expected outcomes, and validation methods. Begin with Phase 1, Step 1A and work systematically through the process.`;
}

module.exports = {
    name: "practical_blueprint",
    description: "Hands-on implementation with concrete examples and templates",
    generateTemplate
};